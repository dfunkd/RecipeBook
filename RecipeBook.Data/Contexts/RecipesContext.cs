// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using RecipeBook.Data.Entities;

namespace RecipeBook.Data.Contexts
{
    public partial class RecipesContext : DbContext
    {
        public RecipesContext()
        {
        }

        public RecipesContext(DbContextOptions<RecipesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Ingredient> Ingredient { get; set; }
        public virtual DbSet<Measurement> Measurement { get; set; }
        public virtual DbSet<Recipe> Recipe { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Ingredient>(entity =>
            {
                entity.HasKey(e => e.InId);

                entity.Property(e => e.InId).HasColumnName("inId");

                entity.Property(e => e.InMeid).HasColumnName("inMEid");

                entity.Property(e => e.InName)
                    .IsRequired()
                    .HasColumnName("inName");

                entity.Property(e => e.InQuantity).HasColumnName("inQuantity");

                entity.Property(e => e.InReid).HasColumnName("inREid");
            });

            modelBuilder.Entity<Measurement>(entity =>
            {
                entity.HasKey(e => e.MeId);

                entity.Property(e => e.MeId).HasColumnName("meId");

                entity.Property(e => e.MeAbbreviation)
                    .IsRequired()
                    .HasColumnName("meAbbreviation");

                entity.Property(e => e.MeName)
                    .IsRequired()
                    .HasColumnName("meName");
            });

            modelBuilder.Entity<Recipe>(entity =>
            {
                entity.HasKey(e => e.ReId);

                entity.Property(e => e.ReId).HasColumnName("reId");

                entity.Property(e => e.ReCookTime).HasColumnName("reCookTime");

                entity.Property(e => e.ReDateAdded)
                    .HasColumnType("date")
                    .HasColumnName("reDateAdded");

                entity.Property(e => e.ReDirections)
                    .IsRequired()
                    .HasColumnName("reDirections");

                entity.Property(e => e.ReIsGood).HasColumnName("reIsGood");

                entity.Property(e => e.ReName)
                    .IsRequired()
                    .HasColumnName("reName");

                entity.Property(e => e.ReNotes).HasColumnName("reNotes");

                entity.Property(e => e.RePrepTime).HasColumnName("rePrepTime");

                entity.Property(e => e.ReServings).HasColumnName("reServings");

                entity.Property(e => e.ReTips).HasColumnName("reTips");

                entity.Property(e => e.ReUrl).HasColumnName("reUrl");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}